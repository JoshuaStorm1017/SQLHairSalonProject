--Joshua Storm

USE A2ZSalonDB;
--Joshua Storm
--QUERY1 - SHOW ORDER TOTALS WITHOUT MEMBER DISCOUNT OR PROMO DISCOUNT
SELECT 
    O.ORDER_ID,
    COALESCE(SUM(OP.PRODUCT_PRICE_AT_SALE * OP.ORD_PRO_QTY), 0) 
	+ COALESCE(SUM(OS.SERVICE_PRICE_AT_SALE), 0) AS TOTAL_AMOUNT
FROM ORDER_ AS O
LEFT JOIN ORDER_PRODUCT AS OP ON O.ORDER_ID = OP.ORDER_ID
LEFT JOIN ORDER_SERVICE AS OS ON O.ORDER_ID = OS.ORDER_ID
GROUP BY O.ORDER_ID
ORDER BY O.ORDER_ID DESC;
--Joshua Storm
--QUERY 2 - CUSTOMERS WHO PAID WITH CREDIT CARDS AND CUSTOMERS WHO DIDN'T SHOW NULL
SELECT 
    C.CUSTOMER_ID,
    CUS_FNAME,
    CUS_LNAME,
    CREDIT_CARD_PAYMENT.CC_AMOUNT AS 'CREDIT_CARD_PAYMENT'
FROM CUSTOMER AS C
LEFT JOIN ORDER_ AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
LEFT JOIN CREDIT_CARD_PAYMENT ON O.ORDER_ID = CREDIT_CARD_PAYMENT.ORDER_ID
ORDER BY C.CUSTOMER_ID;
--Joshua Storm
--QUERY 3 CALCULATES ORDER TOTAL WITH %5 OFF MEMMBERSHIP RATE AND PROMO CODE IF APPLICABLE
SELECT 
    O.ORDER_ID,
    ROUND( COALESCE(SUM(
                OP.PRODUCT_PRICE_AT_SALE * OP.ORD_PRO_QTY * 
                CASE 
                    WHEN P.PROMO_DISCOUNT_RATE IS NOT NULL THEN (1 - P.PROMO_DISCOUNT_RATE / 100)
                    ELSE 1
                END *
                CASE 
                    WHEN C.CUS_IS_MEMBER = 'Y' THEN 0.95
                    ELSE 1
                END), 0) +
        COALESCE( SUM(OS.SERVICE_PRICE_AT_SALE *
                CASE 
                    WHEN P.PROMO_DISCOUNT_RATE IS NOT NULL THEN (1 - P.PROMO_DISCOUNT_RATE / 100)
                    ELSE 1
                END *
                CASE 
                    WHEN C.CUS_IS_MEMBER = 'Y' THEN 0.95
                    ELSE 1
                END), 0), 2) AS TOTAL_AMOUNT
FROM ORDER_ AS O
LEFT JOIN ORDER_PRODUCT AS OP ON O.ORDER_ID = OP.ORDER_ID
LEFT JOIN ORDER_SERVICE AS OS ON O.ORDER_ID = OS.ORDER_ID
LEFT JOIN PROMOTION AS P ON OP.PROMOTION_ID = P.PROMOTION_ID OR OS.PROMOTION_ID = P.PROMOTION_ID
LEFT JOIN CUSTOMER AS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY O.ORDER_ID
ORDER BY TOTAL_AMOUNT;
--JOSHUA STORM
--QUERY 4 SHOWS CUSTOMERS WHO DID NOT PAY WITH THEIR OWN CREDIT CARD (SPOUSES OR PARENT)
SELECT 
    C.CUSTOMER_ID,
    C.CUS_FNAME AS CUSTOMER_FIRST_NAME,
    C.CUS_LNAME AS CUSTOMER_LAST_NAME,
    CC.CC_CFNAME AS CREDIT_CARD_FIRST_NAME,
    CC.CC_LNAME AS CREDIT_CARD_LAST_NAME
FROM CUSTOMER AS C
JOIN CREDIT_CARD AS CC ON C.CUSTOMER_ID = CC.CUSTOMER_ID
WHERE C.CUS_FNAME != CC.CC_CFNAME OR C.CUS_LNAME != CC.CC_LNAME
ORDER BY C.CUS_LNAME DESC;
--JOSHUA STORM
--QUERY 5 SHOWS TOTAL APPOINTMENTS FOR EACH BEAUTICIAN

SELECT 
    B.BEAUTICIAN_ID,
    B.BEA_FNAME AS BEAUTICIAN_FIRST_NAME,
    B.BEA_LNAME AS BEAUTICIAN_LAST_NAME,
    COUNT(A.APPOINTMENT_ID) AS TOTAL_APPOINTMENTS
FROM BEAUTICIAN AS B
LEFT JOIN APPOINTMENT AS A ON B.BEAUTICIAN_ID = A.BEAUTICIAN_ID
GROUP BY B.BEAUTICIAN_ID, B.BEA_FNAME, B.BEA_LNAME
ORDER BY TOTAL_APPOINTMENTS DESC;
--JOSHUA STORM
--QUERY 6 WILL SHOW THE TOTAL SALES FOR EACH STORE, INCLUDING PRODUCTS AND SERVICES.

SELECT 
    S.STORE_ID,
    S.STORE_NAME,
    SUM(OP.PRODUCT_PRICE_AT_SALE * OP.ORD_PRO_QTY) + SUM(OS.SERVICE_PRICE_AT_SALE) 
	AS TOTAL_SALES
FROM STORE AS S
LEFT JOIN ORDER_ AS O ON S.STORE_ID = O.STORE_ID
LEFT JOIN ORDER_PRODUCT AS OP ON O.ORDER_ID = OP.ORDER_ID
LEFT JOIN ORDER_SERVICE AS OS ON O.ORDER_ID = OS.ORDER_ID
GROUP BY S.STORE_ID, S.STORE_NAME
ORDER BY TOTAL_SALES ASC;

--JOSHUA STORM
--QUERY 7 WILL SHOW THE DETAILS OF EACH ORDER, INCLUDING THE CUSTOMER, BEAUTICIAN, AND STORE INFORMATION.
SELECT 
    O.ORDER_ID,
    C.CUS_FNAME AS CUSTOMER_FIRST_NAME,
    C.CUS_LNAME AS CUSTOMER_LAST_NAME,
    B.BEA_FNAME AS BEAUTICIAN_FIRST_NAME,
    B.BEA_LNAME AS BEAUTICIAN_LAST_NAME,
    S.STORE_NAME,
    P.PROD_NAME AS PRODUCT_NAME,
    OP.PRODUCT_PRICE_AT_SALE AS PRODUCT_COST,
    OP.ORD_PRO_QTY AS QUANTITY_ORDERED
FROM ORDER_ AS O
JOIN CUSTOMER AS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
LEFT JOIN BEAUTICIAN AS B ON O.BEAUTICIAN_ID = B.BEAUTICIAN_ID
JOIN STORE AS S ON O.STORE_ID = S.STORE_ID
JOIN ORDER_PRODUCT AS OP ON O.ORDER_ID = OP.ORDER_ID
JOIN PRODUCT AS P ON OP.PRODUCT_ID = P.PRODUCT_ID
ORDER BY O.ORDER_ID;
--JOSHUA STORM
--QUERY 8 SHOWS INVENTORY OF PRODUCTS AVAILABLE AT STORE LOCATIONS (with sales subtracting from inventory)
SELECT 
    S.STORE_NAME,
    P.PROD_NAME AS PRODUCT_NAME,
    (SP.ST_PROD_QOH - COALESCE(SUM(OP.ORD_PRO_QTY), 0)) AS QUANTITY_ON_HAND
FROM STORE AS S
JOIN STORE_PRODUCT AS SP ON S.STORE_ID = SP.STORE_ID
JOIN PRODUCT AS P ON SP.PRODUCT_ID = P.PRODUCT_ID
LEFT JOIN ORDER_PRODUCT AS OP ON P.PRODUCT_ID = OP.PRODUCT_ID
GROUP BY S.STORE_NAME, P.PROD_NAME, SP.ST_PROD_QOH
ORDER BY P.PROD_NAME;
--JOSHUA STORM
--QUERY 9 SHOWS TOTAL REVENUE FROM SERVICES FROM EACH BEAUTICIAN
SELECT 
    B.BEAUTICIAN_ID,
    B.BEA_FNAME AS BEAUTICIAN_FIRST_NAME,
    B.BEA_LNAME AS BEAUTICIAN_LAST_NAME,
    SUM(OS.SERVICE_PRICE_AT_SALE) AS TOTAL_SERVICE_REVENUE
FROM BEAUTICIAN AS B
JOIN ORDER_ AS O ON B.BEAUTICIAN_ID = O.BEAUTICIAN_ID
JOIN ORDER_SERVICE AS OS ON O.ORDER_ID = OS.ORDER_ID
GROUP BY B.BEAUTICIAN_ID, B.BEA_FNAME, B.BEA_LNAME
ORDER BY TOTAL_SERVICE_REVENUE DESC;
--JOSHUA STORM
--QUERY 10 SHOWS CUSTOMER HAIR PREFERENCES AND WHAT BEAUTICIAN SERVED THEM
SELECT 
    C.CUS_FNAME AS CUSTOMER_FIRST_NAME,
    C.CUS_LNAME AS CUSTOMER_LAST_NAME,
    P.Pref_hair_length AS PREFERRED_HAIR_LENGTH,
    P.Pref_hair_color AS PREFERRED_HAIR_COLOR,
    P.Pref_shampoo AS PREFERRED_SHAMPOO,
    P.Pref_conditioner AS PREFERRED_CONDITIONER,
    P.Pref_notes AS PREFERENCE_NOTES,
    B.BEA_FNAME AS BEAUTICIAN_FIRST_NAME,
    B.BEA_LNAME AS BEAUTICIAN_LAST_NAME
FROM CUSTOMER AS C
JOIN PREFERENCE AS P ON C.CUSTOMER_ID = P.CustomerID
JOIN APPOINTMENT AS A ON C.CUSTOMER_ID = A.CUSTOMER_ID
JOIN BEAUTICIAN AS B ON A.BEAUTICIAN_ID = B.BEAUTICIAN_ID
ORDER BY C.CUSTOMER_ID;
--JOSHUA STORM
--QUERY 11 SHOWS CERTIFICATES HELD BY BEAUTICIANS WITH ACTIVE DATE AND EXPIRATION DATE
SELECT 
    B.BEA_FNAME AS BEAUTICIAN_FIRST_NAME,
    B.BEA_LNAME AS BEAUTICIAN_LAST_NAME,
    CE.CERT_NAME AS CERTIFICATE_NAME,
    BC.CERT_ACTIVE_DATE AS ACTIVE_DATE,
    BC.CERT_EXPIRATION_DATE AS EXPIRATION_DATE
FROM BEAUTICIAN AS B
JOIN BEAUTICIAN_CERT AS BC ON B.BEAUTICIAN_ID = BC.BEAUTICIAN_ID
JOIN CERTIFICATE AS CE ON BC.CERTIFICATE_ID = CE.CERTIFICATEID
ORDER BY B.BEAUTICIAN_ID;
--JOSHUA STORM
-- QUERY 12 SHOWS WHAT PROMOTIONS WERE APPLIED TO WHAT ORDER ID

SELECT
    P.PROMOTION_ID,
    P.PROMO_TYPE AS PROMOTION_TYPE,
    P.PROMO_DISCOUNT_RATE AS DISCOUNT_RATE,
    P.PROMO_DESCR AS PROMOTION_DESCRIPTION,
    O.ORDER_ID
FROM (
    SELECT DISTINCT
        OP.PROMOTION_ID
    FROM ORDER_PRODUCT AS OP
    WHERE OP.PROMOTION_ID IS NOT NULL
    UNION
    SELECT DISTINCT
        OS.PROMOTION_ID
    FROM ORDER_SERVICE AS OS
    WHERE OS.PROMOTION_ID IS NOT NULL
) AS UniquePromotions
JOIN PROMOTION AS P ON UniquePromotions.PROMOTION_ID = P.PROMOTION_ID
LEFT JOIN ORDER_PRODUCT AS OP ON P.PROMOTION_ID = OP.PROMOTION_ID
LEFT JOIN ORDER_SERVICE AS OS ON P.PROMOTION_ID = OS.PROMOTION_ID
JOIN ORDER_ AS O ON OP.ORDER_ID = O.ORDER_ID OR OS.ORDER_ID = O.ORDER_ID
GROUP BY P.PROMOTION_ID, P.PROMO_TYPE, P.PROMO_DISCOUNT_RATE, P.PROMO_DESCR, O.ORDER_ID
ORDER BY P.PROMOTION_ID;
--JOSHUA STORM
--QUERY 13 SHOW PAYMENT TYPES WERE MADE BY WHAT CUSTOMER AND HOW MUCH

SELECT 
    C.CUSTOMER_ID, C.CUS_FNAME AS CUSTOMER_FIRST_NAME, C.CUS_LNAME AS CUSTOMER_LAST_NAME,
    'Credit Card' AS PAYMENT_METHOD, CCP.CC_AMOUNT AS PAYMENT_AMOUNT
FROM CUSTOMER AS C
JOIN ORDER_ AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN CREDIT_CARD_PAYMENT AS CCP ON O.ORDER_ID = CCP.ORDER_ID
UNION ALL
SELECT 
    C.CUSTOMER_ID, C.CUS_FNAME AS CUSTOMER_FIRST_NAME,C.CUS_LNAME AS CUSTOMER_LAST_NAME,
    'Check' AS PAYMENT_METHOD, CP.CHECK_AMOUNT AS PAYMENT_AMOUNT
FROM CUSTOMER AS C
JOIN ORDER_ AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN CHECK_PAYMENT AS CP ON O.ORDER_ID = CP.ORDER_ID
UNION ALL
SELECT 
    C.CUSTOMER_ID, C.CUS_FNAME AS CUSTOMER_FIRST_NAME, C.CUS_LNAME AS CUSTOMER_LAST_NAME,
    'Cash' AS PAYMENT_METHOD, CASH_P.CASH_AMOUNT AS PAYMENT_AMOUNT
FROM CUSTOMER AS C
JOIN ORDER_ AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
JOIN CASH_PAYMENT AS CASH_P ON O.ORDER_ID = CASH_P.ORDER_ID
ORDER BY CUSTOMER_ID;
--JOSHUA STORM
--QUERY 14 SHOWS HOW MANY TIMES A BEATUTICIAN DID A SERVICE

SELECT 
    B.BEA_FNAME AS BEAUTICIAN_FIRST_NAME,
    B.BEA_LNAME AS BEAUTICIAN_LAST_NAME,
    S.SERVICE_NAME,
    COUNT(OS.SERVICE_ID) AS NUMBER_OF_TIMES_PERFORMED
FROM BEAUTICIAN AS B
JOIN ORDER_ AS O ON B.BEAUTICIAN_ID = O.BEAUTICIAN_ID
JOIN ORDER_SERVICE AS OS ON O.ORDER_ID = OS.ORDER_ID
JOIN SERVICE AS S ON OS.SERVICE_ID = S.SERVICE_ID
GROUP BY B.BEA_FNAME, B.BEA_LNAME, B.BEAUTICIAN_ID, S.SERVICE_NAME, S.SERVICE_ID
ORDER BY B.BEAUTICIAN_ID, NUMBER_OF_TIMES_PERFORMED DESC;
--JOSHUA STORM
--QUERY 15 SHOWS SALES AMOUNT BY CUSTOMER ZIPCODES WITHOUT MEMBERSHIP DISCOUNTS OR PROMOTION DISCOUNTS
SELECT 
    C.ZIP_CODE,
    SUM(
        COALESCE(OP.PRODUCT_PRICE_AT_SALE * OP.ORD_PRO_QTY, 0) +
        COALESCE(OS.SERVICE_PRICE_AT_SALE, 0)
    ) AS TOTAL_SALES
FROM CUSTOMER AS C
JOIN ORDER_ AS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
LEFT JOIN ORDER_PRODUCT AS OP ON O.ORDER_ID = OP.ORDER_ID
LEFT JOIN ORDER_SERVICE AS OS ON O.ORDER_ID = OS.ORDER_ID
GROUP BY C.ZIP_CODE
ORDER BY TOTAL_SALES DESC;
--JOHUA STORM
--QUERY 16 SHOWS WHAT STORES BEAUTICIANS WORK AT

SELECT 
    B.BEA_FNAME AS BEAUTICIAN_FIRST_NAME,
    B.BEA_LNAME AS BEAUTICIAN_LAST_NAME,
    S.STORE_NAME
FROM BEAUTICIAN AS B
JOIN BEAUTICIAN_STORE AS BS ON B.BEAUTICIAN_ID = BS.BEAUTICIAN_ID
JOIN STORE AS S ON BS.STORE_ID = S.STORE_ID
ORDER BY S.STORE_NAME, B.BEA_FNAME, B.BEA_LNAME;
--JOSHUA STORM
-- QUERY 17 SHOWS WHAT PROMOTIONS WERE SENT TO WHAT CUSTOMERS
SELECT 
    C.CUS_FNAME AS CUSTOMER_FIRST_NAME,
    C.CUS_LNAME AS CUSTOMER_LAST_NAME,
    P.PROMO_TYPE AS PROMOTION_TYPE,
    P.PROMO_DESCR AS PROMOTION_DESCRIPTION
FROM CUSTOMER AS C
JOIN CUSTOMER_PROMOTION AS CP ON C.CUSTOMER_ID = CP.CUSTOMER_ID
JOIN PROMOTION AS P ON CP.PROMOTION_ID = P.PROMOTION_ID
ORDER BY C.CUS_FNAME, C.CUS_LNAME, P.PROMO_TYPE;